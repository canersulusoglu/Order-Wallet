// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OrderService.API;

#nullable disable

namespace OrderService.API.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20220727174026_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("OrderService.API.Models.RoomOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ConfirmedBasketUserEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ConfirmedBasketUserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("EmployeeEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("OrderId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OrderMessage")
                        .HasColumnType("text");

                    b.Property<string>("RoomName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("RoomOrders");
                });

            modelBuilder.Entity("OrderService.API.Models.UserOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("RoomOrderId")
                        .HasColumnType("integer");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoomOrderId");

                    b.ToTable("UserOrders");
                });

            modelBuilder.Entity("OrderService.API.Models.UserOrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("ProductPrice")
                        .HasColumnType("numeric");

                    b.Property<int>("ProductQuantity")
                        .HasColumnType("integer");

                    b.Property<int?>("UserOrderId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserOrderId");

                    b.ToTable("UserOrderItems");
                });

            modelBuilder.Entity("OrderService.API.Models.UserOrder", b =>
                {
                    b.HasOne("OrderService.API.Models.RoomOrder", "RoomOrder")
                        .WithMany("Users")
                        .HasForeignKey("RoomOrderId");

                    b.Navigation("RoomOrder");
                });

            modelBuilder.Entity("OrderService.API.Models.UserOrderItem", b =>
                {
                    b.HasOne("OrderService.API.Models.UserOrder", "UserOrder")
                        .WithMany("Products")
                        .HasForeignKey("UserOrderId");

                    b.Navigation("UserOrder");
                });

            modelBuilder.Entity("OrderService.API.Models.RoomOrder", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("OrderService.API.Models.UserOrder", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
